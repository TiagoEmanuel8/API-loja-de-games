{
  "openapi": "3.0.0",
  "info": {
    "title": "API Game Store",
    "description": "Documentação geral para entender o comportamento da API game store",
    "contact": { "email": "tiago.emanuel.n@gmail.com" },
    "version": "1.0.0",
    "x-logo": {
      "url": "https://www.logolynx.com/images/logolynx/d3/d3287bc5c651f738e1df7f42ac9f97c0.jpeg"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3001",
      "description": "Documentação com a api rodando localmente"
    },
    {
      "url": "https://site.com.br",
      "description": "Documentação com a api rodando em produção"
    }
  ],
  "paths": {
    "/users": {
      "get": {
        "description": "Exibe todos os usuários cadastrados no sistema",
        "summary": "Listar usuários",
        "tags": ["Users"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "401": { "description": "Invalid token" },
          "403": { "description": "Only admins or sellers can list users" },
          "404": { "description": "Token not found" },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "$ref": "#/components/schemas/findUser"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Cadastrar novo usuário",
        "description": "Cadastrar novos usuários no sistema",
        "tags": ["Users"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/createUser"
              },
              "examples": {
                "user": {
                  "value": {
                    "name": "Paulo Kaique da Cunha",
                    "email": "paulokaiquedc@gmail.com.br",
                    "password": "4Pfcqz4OC",
                    "cpf": 96470365582,
                    "mobile_number": 95994540894,
                    "address": "Rua Nova Geração",
                    "address_number": 189,
                    "district": "Kaikan Sul",
                    "city": "Teixeira de Freitas",
                    "state": "BA",
                    "country": "BR",
                    "cep": 69315325,
                    "role": "seller"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "401": { "description": "User already registered" },
          "401-B": { "description": "password must contain between 6 and 10 characters" },
          "401-C": { "description": "'email' must be a valid email" },
          "401-D": { "description": "Invalid token" },
          "404": { "description": "Token not found" },
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/findUser"
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "description": "Lista um usuário pelo seu id",
        "summary": "Listar um usuário pelo seu id",
        "tags": ["Users"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [{
          "name": "id",
          "in": "path",
          "description": "busca do usuário por id",
          "required": true
        }],
        "responses": {
          "401": { "description": "Invalid token" },
          "404": { "description": "User not found" },
          "404-B": { "description": "Token not found" },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/findUser"
                }
              }
            }
          }
        }
      },
      "patch": {
        "description": "Altera o usuário pelo seu id",
        "summary": "Alterar dados de usuário",
        "tags": ["Users"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Atualiza dadaos de usuário pelo ID",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "$ref": "#/components/schemas/findUser",
                "example": 4
              },
              "examples": {
                "user": {
                  "value": {
                    "email": "alexandremdc@gmail.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "400": { "description": "the fields 'name', 'type', 'price' need to be filled" },
          "401": { "description": "Invalid token" },
          "403": { "description": "Only admins or sellers can updated products" },
          "404": { "description": "Product not found" },
          "404-B": { "description": "Token not found" },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/findUser"
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Deleta um usuário pelo seu id",
        "summary": "Deletar um usuário",
        "tags": ["Users"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [{
          "in": "path",
          "name": "id",
          "description": "Id do usuário a ser deletado",
          "required": true
        }],
        "responses": {
          "401": { "description": "Unauthorized user" },
          "401-B": { "description": "Invalid token" },
          "404": { "description": "User not found" },
          "404-B": { "description": "Token not found" },
          "204": { "description": "" }
        }
      }
    },
    "/login": {
      "post": {
        "summary": "Login",
        "description": "login de usuário no sistema",
        "tags": ["Login"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/login"
              },
              "examples": {
                "login": {
                  "value": {
                    "email": "reginastellabarbosa_@gmail.com",
                    "password": "p9iBFXc3wf"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "401": { "description": "Incorrect email or password" },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/logged"
                }
              }
            }
          }
        }
      }
    },
    "/products": {
      "post": {
        "summary": "Cadastrar novo produto",
        "description": "Essa rota é responsável por cadastrar um novo produto",
        "tags": ["Products"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/createdProduct"
              },
              "examples": {
                "product": {
                  "value": {
                    "name": "Elden Ring",
                    "type": "Playstation 5",
                    "price": 200,
                    "quantity": 50
                  }
                }
              }
            }
          }
        },
        "responses": {
          "400": { "description": "the fields 'name', 'type', 'price' need to be filled" },
          "401": { "description": "Invalid token" },
          "403": { "description": "Only admins or sellers can create products" },
          "404": { "description": "Token not found" },
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/findProduct"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Listar produtos",
        "description": "Listar todos os produtos cadastrados",
        "tags": ["Products"],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "$ref": "#/components/schemas/findProduct"
                }
              }
            }
          }
        }
      }
    },
    "/products/{id}": {
      "get": {
        "summary": "Listar produto",
        "description": "Listar um produto pelo seu id",
        "tags": ["Products"],
        "parameters": [{
          "name": "id",
          "in": "path",
          "description": "busca do produto por id",
          "required": true
        }],
        "responses": {
          "404": { "description": "Product not found" },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/findProduct"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Alterar dados do produto",
        "description": "Alterar dados do produto pelo id",
        "tags": ["Products"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Nome do produto pelo ID",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "$ref": "#/components/schemas/createdProduct"
              },
              "examples": {
                "product": {
                  "value": {
                    "name": "Elden Ring GOTY",
                    "type": "Playstation 5",
                    "price": 250,
                    "quantity": 50
                  }
                }
              }
            }
          }
        },
        "responses": {
          "400": { "description": "the fields 'name', 'type', 'price' need to be filled" },
          "401": { "description": "Invalid token" },
          "403": { "description": "Only admins or sellers can updated products" },
          "404": { "description": "Product not found" },
          "404-B": { "description": "Token not found" },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/findProduct"
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Deletar um produto pelo seu id",
        "summary": "Deletar um produto",
        "tags": ["Products"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [{
          "in": "path",
          "name": "id",
          "description": "Id do produto a ser deletado",
          "required": true
        }],
        "responses": {
          "401": { "description": "Invalid token" },
          "403": { "description": "Only admins or sellers can delete products" },
          "404": { "description": "Product not found" },
          "404-B": { "description": "Token not found" },
          "204": { "description": "" }
        }
      }
    },
    "/sales": {
      "post": {
        "summary": "Criar novas vendas",
        "description": "Criar novas vendas",
        "tags": ["Sales"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/createSale"
              },
              "examples": {
                "sale": {
                    "value": {
                      "userId": 3,
                      "sellerId": 2,
                      "totalPrice": 150,
                      "statusSale": "pedido enviado",
                      "products": {
                        "productId": 4,
                        "quantity": 1
                      }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/createSale"
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "Exibe todas as vendas",
        "summary": "Exibir todas as vendas",
        "tags": ["Sales"],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "$ref": "#/components/schemas/findSale"
                }
              }
            }
          }
        }
      }
    },
    "/sales/{id}": {
      "get": {
        "description": "Exibe uma venda pelo seu id",
        "summary": "Exibir uma venda",
        "tags": ["Sales"],
        "parameters": [{
          "name": "id",
          "in": "path",
          "description": "busca de vendas por id",
          "required": true
        }],
        "responses": {
          "404": { "description": "Sale not found" },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/findSale"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "findUser": {
        "type": "object",
        "properties": {
          "id": { "type": "integer" },
          "name": { "type": "string" },
          "email": { "type": "string" },
          "cpf": { "type": "integer" },
          "mobileNumber": { "type": "integer" },
          "address": { "type": "string" },
          "addressNumber": { "type": "integer" },
          "district": { "type": "string" },
          "city": { "type": "string" },
          "state": { "type": "string" },
          "country": { "type": "string" },
          "cep": { "type": "integer" },
          "role": { "type": "string" }
        }
      },
      "createUser": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "email": { "type": "string" },
          "cpf": { "type": "integer" },
          "mobileNumber": { "type": "integer" },
          "address": { "type": "string" },
          "addressNumber": { "type": "integer" },
          "district": { "type": "string" },
          "city": { "type": "string" },
          "state": { "type": "string" },
          "country": { "type": "string" },
          "cep": { "type": "integer" },
          "role": { "type": "string" }
        }
      },
      "login": {
        "type": "object",
        "properties": {
          "email": { "type": "string" },
          "password": { "type": "string" }
        }
      },
      "logged": {
        "type": "object",
        "properties": {
          "id": { "type": "integer" },
          "name": { "type": "string" },
          "email": { "type": "string" },
          "role": { "type": "string" },
          "token": { "type": "string" }
        }
      },
      "createdProduct": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "type": { "type": "string" },
          "price": { "type": "integer" },
          "quantity": { "type": "integer" }
        }
      },
      "findProduct": {
        "type": "object",
        "properties": {
          "id": { "type": "integer" },
          "name": { "type": "string" },
          "type": { "type": "string" },
          "price": { "type": "integer" },
          "quantity": { "type": "integer" },
          "url_image": { "type": "string" }
        }
      },
      "createSale": {
        "type": "object",
        "properties": {
          "userId": { "type": "integer" },
          "sellerId": { "type": "integer" },
          "totalPrice": { "type": "integer" },
          "statusSale": { "type": "string" },
          "products": {
            "type": "object",
            "properties": {
              "productId": { "type": "integer" },
              "quantity": { "type": "integer" }
            }
          }
        }
      },
      "findSale": {
        "type": "object",
        "properties": {
          "id": { "type": "integer" },
          "userId": { "type": "integer" },
          "sellerId": { "type": "integer" },
          "totalPrice": { "type": "integer" },
          "saleDate": {  "type": "string", "format": "date-time" },
          "statusSale": { "type": "string" },
          "user_id": {
            "type": "object",
            "properties": {
              "id": { "type": "integer" },
              "name": { "type": "string" },
              "email": { "type": "string" },
              "cpf": { "type": "integer" },
              "mobileNumber": { "type": "integer" },
              "address": { "type": "string" },
              "addressNumber": { "type": "integer" },
              "district": { "type": "string" },
              "city": { "type": "string" },
              "state": { "type": "string" },
              "country": { "type": "string" },
              "cep": { "type": "integer" },
              "role": { "type": "string" }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "description": "Autenticação utilizando o token JWT",
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
